(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

require('./services');
require('./filters');
require('./directives');
require('./controllers');

// app.js
angular.module('app', [
    'ht.services',
    'ht.directives',
    'ht.filters',
    'ht.controllers',
    'ht.templates',
    'ngRoute',
    'ngResource',
    'angular-storage',
    'oitozero.ngSweetAlert',
    'ui.bootstrap',
    'nouislider'
]);
},{"./controllers":2,"./directives":10,"./filters":19,"./services":23}],2:[function(require,module,exports){
'use strict';
var m = angular.module('ht.controllers', []);


// controllers


require('./lib/admin/index')(m);
require('./lib/admin/head')(m);
require('./lib/admin/sidebar')(m);
require('./lib/admin/login')(m);
require('./lib/admin/users')(m);
require('./lib/admin/user-detail')(m);
require('./lib/admin/country-detail')(m);

module.exports = m;
},{"./lib/admin/country-detail":3,"./lib/admin/head":4,"./lib/admin/index":5,"./lib/admin/login":6,"./lib/admin/sidebar":7,"./lib/admin/user-detail":8,"./lib/admin/users":9}],3:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminCountryDetailController', function($scope, $rootScope, store, $location, authService, $timeout, analyticsService, utilService, SelectedCountry) {

        authService.adminAuthenticate();

        $rootScope.$broadcast('CHANGE_SIDEBAR_ITEM', 'countries', SelectedCountry);


        $scope.selectedCountry = SelectedCountry;



        $scope.currentLayout = 6;
        $scope.changeLayout = function(columns) {
            switch (columns) {
                case 2:
                    $scope.currentLayout = 6;
                    break;
                case 1:
                    $scope.currentLayout = 12;
                    break;
                case 3:
                    $scope.currentLayout = 4;
                    break;
                default:
                    $scope.currentLayout = 6;
                    break;
            }

        }

        $timeout(function() {
            $(function() {
                $('.panel')
                    .on('panel:toggle', function() {
                        var $this,
                            direction;

                        $this = $(this);
                        direction = $this.hasClass('panel-collapsed') ? 'Down' : 'Up';

                        $this.find('.panel-body, .panel-footer')['slide' + direction](200, function() {
                            $this[(direction === 'Up' ? 'add' : 'remove') + 'Class']('panel-collapsed')
                        });
                    })
                    .on('panel:dismiss', function() {
                        var $this = $(this);

                        if (!!($this.parent('div').attr('class') || '').match(/col-(xs|sm|md|lg)/g) && $this.siblings().length === 0) {
                            $row = $this.closest('.row');
                            $this.parent('div').remove();
                            if ($row.children().length === 0) {
                                $row.remove();
                            }
                        } else {
                            $this.remove();
                        }
                    })
                    .on('click', '[data-panel-toggle]', function(e) {
                        e.preventDefault();
                        $(this).closest('.panel').trigger('panel:toggle');
                    })
                    .on('click', '[data-panel-dismiss]', function(e) {
                        e.preventDefault();
                        $(this).closest('.panel').trigger('panel:dismiss');
                    })
                /* Deprecated */
                .on('click', '.panel-actions a.fa-caret-up', function(e) {
                    e.preventDefault();
                    var $this = $(this);

                    $this
                        .removeClass('fa-caret-up')
                        .addClass('fa-caret-down');

                    $this.closest('.panel').trigger('panel:toggle');
                })
                    .on('click', '.panel-actions a.fa-caret-down', function(e) {
                        e.preventDefault();
                        var $this = $(this);

                        $this
                            .removeClass('fa-caret-down')
                            .addClass('fa-caret-up');

                        $this.closest('.panel').trigger('panel:toggle');
                    })
                    .on('click', '.panel-actions a.fa-times', function(e) {
                        e.preventDefault();
                        var $this = $(this);

                        $this.closest('.panel').trigger('panel:dismiss');
                    });
            });
        });



    });
};
},{}],4:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminHeadController', function($scope, $rootScope, store, $location, authService, userService) {

        $scope.logout = function() {

            store.remove('admin');
            window.location = '/admin-login/#/';
        };
    });
};
},{}],5:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminIndexController', function($scope, $rootScope, store, $location, authService, Countries, $timeout, analyticsService, utilService) {

        authService.adminAuthenticate();

        $rootScope.$broadcast('CHANGE_SIDEBAR_ITEM', 'dashboard', '');


        $scope.selectedCountry = 'UNITED STATES';

        console.log('countries', Countries);

        var COUNTRY_MAP = utilService.COUNTRY_MAP;

        var transformCountries = function() {
            var dat = {};

            for (var i = 0; i < Countries.length; i++) {
                var country = Countries[i];
                for (var countryCode in COUNTRY_MAP) {
                    var countryName = COUNTRY_MAP[countryCode];
                    if ((countryName == country) || (countryName.toUpperCase() == country)) {
                        dat[countryCode.toLowerCase()] = 1;
                    }
                }
            };


            return dat;
        }

        $scope.regionClick = function(element, code, region) {
            var message = 'You clicked "' + region + '" which has the code: ' + code.toUpperCase();
            for (var countryCode in COUNTRY_MAP) {
                var countryName = COUNTRY_MAP[countryCode];
                // console.log('countryCode', countryCode, code);
                if (countryCode.toLowerCase() == code) {
                    $scope.selectedCountry = countryName.toUpperCase();
                }
            }
            $scope.$apply();
            console.log(message, $scope.selectedCountry, 'yyy');
            $('.worldmap[data-panel-toggle]').click();
        };

        $scope.currentLayout = 6;
        $scope.changeLayout = function(columns) {
            switch (columns) {
                case 2:
                    $scope.currentLayout = 6;
                    break;
                case 1:
                    $scope.currentLayout = 12;
                    break;
                case 3:
                    $scope.currentLayout = 4;
                    break;
                default:
                    $scope.currentLayout = 6;
                    break;
            }

        }

        $timeout(function() {
            $(function() {
                $('.panel')
                    .on('panel:toggle', function() {
                        var $this,
                            direction;

                        $this = $(this);
                        direction = $this.hasClass('panel-collapsed') ? 'Down' : 'Up';

                        $this.find('.panel-body, .panel-footer')['slide' + direction](200, function() {
                            $this[(direction === 'Up' ? 'add' : 'remove') + 'Class']('panel-collapsed')
                        });
                    })
                    .on('panel:dismiss', function() {
                        var $this = $(this);

                        if (!!($this.parent('div').attr('class') || '').match(/col-(xs|sm|md|lg)/g) && $this.siblings().length === 0) {
                            $row = $this.closest('.row');
                            $this.parent('div').remove();
                            if ($row.children().length === 0) {
                                $row.remove();
                            }
                        } else {
                            $this.remove();
                        }
                    })
                    .on('click', '[data-panel-toggle]', function(e) {
                        e.preventDefault();
                        $(this).closest('.panel').trigger('panel:toggle');
                    })
                    .on('click', '[data-panel-dismiss]', function(e) {
                        e.preventDefault();
                        $(this).closest('.panel').trigger('panel:dismiss');
                    })
                /* Deprecated */
                .on('click', '.panel-actions a.fa-caret-up', function(e) {
                    e.preventDefault();
                    var $this = $(this);

                    $this
                        .removeClass('fa-caret-up')
                        .addClass('fa-caret-down');

                    $this.closest('.panel').trigger('panel:toggle');
                })
                    .on('click', '.panel-actions a.fa-caret-down', function(e) {
                        e.preventDefault();
                        var $this = $(this);

                        $this
                            .removeClass('fa-caret-down')
                            .addClass('fa-caret-up');

                        $this.closest('.panel').trigger('panel:toggle');
                    })
                    .on('click', '.panel-actions a.fa-times', function(e) {
                        e.preventDefault();
                        var $this = $(this);

                        $this.closest('.panel').trigger('panel:dismiss');
                    });
            });


            var initMap = function($el, options) {

                var defaults = {
                    backgroundColor: null,
                    color: '#FFFFFF',
                    hoverOpacity: 0.7,
                    selectedColor: '#005599',
                    enableZoom: true,
                    borderWidth: 1,
                    showTooltip: true,
                    values: transformCountries(),
                    scaleColors: ['#1AA2E6', '#0088CC'],
                    normalizeFunction: 'polynomial',
                    onRegionClick: function(element, code, region) {
                        $scope.regionClick(element, code, region);
                    }
                };

                $el.vectorMap($.extend(defaults, options));
            };

            $('[data-vector-map]').each(function() {
                var $this = $(this);
                initMap($this, ($this.data('plugin-options') || {}))
            });




        });



    });
};
},{}],6:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminLoginController', function($scope, $rootScope, store, $location, authService, userService) {

        $scope.login = function() {
            userService.adminLogin($scope.user, function(ret) {


                store.set('admin', ret);


                window.location = '/#/';

            }, function(err) {
                swal('Error', err.data.message, 'error');
                $scope.user.username = '';
                $scope.user.password = '';
            });
        };
    });
};
},{}],7:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminSideBarController', function($scope, $rootScope, store, $location, authService, userService, utilService) {
        authService.adminAuthenticate();
        $scope.currentActiveParent = 'dashboard';
        $scope.currentActiveChild = '';
        $rootScope.$on('CHANGE_SIDEBAR_ITEM', function(event, parent, child) {
            console.log('parent child', parent, child);
            $scope.currentActiveParent = parent;
            $scope.currentActiveChild = child;
        });

        userService.getAllCountries(function(countries) {
            var COUNTRY_MAP = utilService.COUNTRY_MAP;
            var countryList = [];

            for (var i = 0; i < countries.length; i++) {
                var country = countries[i];
                for (var countryCode in COUNTRY_MAP) {
                    var countryName = COUNTRY_MAP[countryCode];
                    if ((countryName == country) || (countryName.toUpperCase() == country)) {
                        countryList.push({
                            name: countryName,
                            code: countryCode.toLowerCase()
                        })
                    }
                }
            };


            $scope.countryList = countryList;

        });
    });
};
},{}],8:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminUserDetailController', function($scope, $rootScope, store, $location, authService, Keywords, userService, $timeout, analyticsService, $routeParams) {

        authService.adminAuthenticate();

        $rootScope.$broadcast('CHANGE_SIDEBAR_ITEM', 'users', '');

        var plotOptions = {
            series: {
                bars: {
                    show: true,
                    lineWidth: 2,
                    align: 'center',
                    barWidth: 0.9
                },
                shadowSize: 0
            },
            grid: {
                hoverable: true,
                clickable: true,
                borderColor: 'rgba(0,0,0,0.1)',
                borderWidth: 1,
                labelMargin: 15,
                backgroundColor: 'transparent'
            },
            yaxis: {
                color: 'rgba(0,0,0,0.1)'

            },
            xaxis: {
                mode: 'categories',
                color: 'rgba(0,0,0,0)'
            },
            legend: {
                show: false
            },
            tooltip: true,
            tooltipOpts: {
                content: '%x: %y Appearances',
                shifts: {
                    x: -30,
                    y: 25
                },
                defaultTheme: false
            }
        };
        var transformToPlotData = function(ret) {
            var data = [];

            for (var i = 0; i < ret.keywords.length; i++) {
                var view = ret.keywords[i];

                data.push([view.keyword, parseInt(view.count, 10)]);
            };

            return [{
                "data": data,
                "color": "#0088cc"
            }];

        };


        var plotGraph = function(ret) {
            $scope.keywords = ret.keywords;
            var plotDat = transformToPlotData(ret);
            console.log('plot dat', plotDat);
            if (plotDat[0].data.length > 0) {
                var plotSP = $.plot('#plotTopKeywords', plotDat, plotOptions);
            } else {
                var plotSP = $.plot('#plotTopKeywords', [
                    []
                ], plotOptions);
            }
        };

        $scope.currentDays = -1;
        $scope.user = Keywords.user;
        $scope.keywords = Keywords.keywords;
        $timeout(function() {
            plotGraph(Keywords);
        })



        $scope.filter = function(days) {
            $scope.currentDays = days;
            analyticsService.tenKeywordsByUser({
                id: $routeParams.id,
                days: days
            }, function(keywords) {
                $scope.currentDays = days;
                plotGraph(keywords);
            });
        };




    });
};
},{}],9:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.controller('AdminUsersController', function($scope, $rootScope, store, $location, authService, Users, $timeout) {

        authService.adminAuthenticate();

        $rootScope.$broadcast('CHANGE_SIDEBAR_ITEM', 'users', '');

        $scope.users = Users;

        $timeout(function() {
            $('#datatable-default').dataTable();
        });


        $scope.goToUserDetail = function(id) {
            window.location = '/#/users/' + id;
        };

    });
};
},{}],10:[function(require,module,exports){
'use strict';
var m = angular.module('ht.directives', []);


// directives
require('./lib/route-loader')(m);
require('./lib/users-country-visit')(m);
require('./lib/keyword-search')(m);
require('./lib/visitors-role-by-country')(m);
require('./lib/searched-project-per-category')(m);
require('./lib/page-views')(m);
require('./lib/completed-projects')(m);
require('./lib/content-pieces')(m);

module.exports = m;
},{"./lib/completed-projects":11,"./lib/content-pieces":12,"./lib/keyword-search":13,"./lib/page-views":14,"./lib/route-loader":15,"./lib/searched-project-per-category":16,"./lib/users-country-visit":17,"./lib/visitors-role-by-country":18}],11:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('completedProjects', function(analyticsService) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/completed-projects.html',
            link: function(scope, element, attributes) {

                scope.currentDays = '-1';


                scope.options = {
                    filters: [{
                        name: 'Today',
                        days: 1
                    }, {
                        name: 'Last Week',
                        days: 7
                    }, {
                        name: 'Last Month',
                        days: 30
                    }, {
                        name: 'Last Year',
                        days: 365
                    }, {
                        name: 'All Time',
                        days: -1
                    }],
                    selectedFilter: {
                        name: 'All Time',
                        days: -1
                    }
                }

                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top Completed Projects';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';

                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no completed projects found in this range';
                }


                //6. <By country>number of visitors based on Role (Manager, Engineer, Analyst)
                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.completedProjects({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        scope.completedProjects = ret.count;
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.completedProjects({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {
                            scope.completedProjects = ret.count;
                        });

                    }
                });

            }
        };
    });
};
},{}],12:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('contentPieces', function(analyticsService) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/content-pieces.html',
            link: function(scope, element, attributes) {


                var plotOptions = {
                    series: {
                        bars: {
                            show: true,
                            lineWidth: 2,
                            align: 'center',
                            barWidth: 0.9
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        color: 'rgba(0,0,0,0.1)'

                    },
                    xaxis: {
                        mode: 'categories',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y Pieces of Content',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };
                var transformToPlotData = function(ret) {
                    var data = [];

                    for (var i = 0; i < ret.stats.length; i++) {
                        var view = ret.stats[i];

                        data.push(['Week ' + view._id.week + ' of ' + view._id.year, parseInt(view.total, 10)]);
                    };
                    // console.log('data', JSON.stringify(data));

                    return [{
                        "data": data,
                        "color": "#0088cc"
                    }];

                }
                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top Content Pieces';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';

                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no content pieces found in this range';
                }

                var plotGraph = function(ret) {
                    scope.contentPieces = ret;
                    var plotDat = transformToPlotData(ret);
                    if (plotDat[0].data.length > 0) {
                        var plotSP = $.plot('#plotContentPieces', plotDat, plotOptions);
                    } else {
                        var plotSP = $.plot('#plotContentPieces', [
                            []
                        ], plotOptions);
                    }
                }

                //6. <By country>number of visitors based on Role (Manager, Engineer, Analyst)
                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.contentPieces({
                        country: attributes.country,
                        days: "per_week",
                    }, function(ret) {
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.contentPieces({
                            country: value,
                            days: "per_week",
                        }, function(ret) {
                            plotGraph(ret);
                        });

                    }
                });

            }
        };
    });
};
},{}],13:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('keywordSearch', function(analyticsService) {
        return {
            restrict: 'EA',
            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/keyword-search.html',
            link: function(scope, element, attributes) {

                scope.currentDays = '-1';


                scope.options = {
                    filters: [{
                        name: 'Today',
                        days: 1
                    }, {
                        name: 'Last Week',
                        days: 7
                    }, {
                        name: 'Last Month',
                        days: 30
                    }, {
                        name: 'Last Year',
                        days: 365
                    }, {
                        name: 'All Time',
                        days: -1
                    }],
                    selectedFilter: {
                        name: 'All Time',
                        days: -1
                    }
                }

                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top 10 Users';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';

                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no users found in this range';
                }

                var plotOptions = {
                    series: {
                        bars: {
                            show: true,
                            lineWidth: 2,
                            align: 'center',
                            barWidth: 0.9
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        color: 'rgba(0,0,0,0.1)'

                    },
                    xaxis: {
                        mode: 'categories',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y Appearances',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };
                var transformToPlotData = function(ret) {
                    var data = [];

                    for (var i = 0; i < ret.keywords.length; i++) {
                        var view = ret.keywords[i];

                        data.push([view.keyword, parseInt(view.count, 10)]);
                    };
                    // console.log('keyqord data', JSON.stringify(data));

                    return [{
                        "data": data,
                        "color": "#0088cc"
                    }];

                };


                var plotGraph = function(ret) {

                    var plotDat = transformToPlotData(ret);
                    if (plotDat[0].data.length > 0) {
                        var plotSP = $.plot('#plotKeywordSearch', plotDat, plotOptions);
                    } else {
                        var plotSP = $.plot('#plotKeywordSearch', [
                            []
                        ], plotOptions);
                    }
                }

                //4. <By country> top 10 keyword search

                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.tenKeywordsByCountry({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        scope.keywordsByCountry = ret;
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.tenKeywordsByCountry({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {
                            scope.keywordsByCountry = ret;
                            plotGraph(ret);
                        });

                    }
                });

            }
        };
    });
};
},{}],14:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('pageViews', function(analyticsService, $timeout) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/page-views.html',
            link: function(scope, element, attributes) {


                scope.options = {
                    filters: [{
                        name: 'Per day',
                        days: 'per_day'
                    }, {
                        name: 'Per week',
                        days: 'per_week'
                    }],
                    selectedFilter: {
                        name: 'Per day',
                        days: 'per_day'
                    }
                }

                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top Page Views';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';


                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no users found in this range';
                }

                var plotOptions = {

                    series: {
                        lines: {
                            show: true,
                            lineWidth: 2
                        },
                        points: {
                            show: true
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        min: 0,
                        color: 'rgba(0,0,0,0.1)'
                    },
                    xaxis: {
                        mode: 'time',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y views',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };

                var transformTimeSeries = function(ret) {
                    var data = [];

                    if (scope.options.selectedFilter.days == 'per_day') {
                        for (var i = 0; i < ret.views.length; i++) {
                            var view = ret.views[i];
                            // console.log(view);
                            var ts = new Date(view._id.year + "/" + view._id.month + "/" + view._id.date);
                            data.push([ts.getTime(), view.count]);
                        };

                        plotOptions.xaxis.mode = 'time';
                        plotOptions.tooltipOpts.content = '%x: %y views';

                        // console.log('data', data);
                        return data;
                    } else {
                        for (var i = 0; i < ret.views.length; i++) {
                            var view = ret.views[i];
                            console.log(view);
                            data.push(["#" + view._id.week + ' of ' + view._id.year, view.count]);
                        };
                        plotOptions.xaxis.mode = 'categories';
                        plotOptions.tooltipOpts.content = 'Week %x: %y views';
                        // console.log('data', data);
                        return data;
                    }

                }


                var plotGraph = function(ret) {
                    scope.pageViews = ret;
                    var plotDat = transformTimeSeries(ret);
                    if (plotDat.length > 0) {
                        scope.plotPageViews = $.plot('#plotPageViews', [plotDat], plotOptions);
                    } else {
                        scope.plotPageViews = $.plot('#plotPageViews', [
                            [
                                []
                            ]
                        ], plotOptions);
                    }
                }


                //3.<By country> number of page views per day and week

                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.pageViews({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.pageViews({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {
                            plotGraph(ret);

                        });
                    }
                });

            }
        };
    });
};
},{}],15:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('routeLoader', function() {
        return {
            restrict: 'EA',
            link: function(scope, element) {
                // Store original display mode of element
                var shownType = element.css('display');

                function hideElement() {
                    element.css('display', 'none');
                }

                scope.$on('$routeChangeStart', function() {
                    element.css('display', shownType);
                });
                scope.$on('$routeChangeSuccess', hideElement);
                scope.$on('$routeChangeError', hideElement);
                // Initially element is hidden
                hideElement();
            }
        };
    });
};
},{}],16:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('searchedProjectsPerCategory', function(analyticsService, $timeout) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/searched-projects-per-category.html',
            link: function(scope, element, attributes) {

                scope.currentDays = '-1';


                scope.options = {
                    filters: [{
                        name: 'Today',
                        days: 1
                    }, {
                        name: 'Last Week',
                        days: 7
                    }, {
                        name: 'Last Month',
                        days: 30
                    }, {
                        name: 'Last Year',
                        days: 365
                    }, {
                        name: 'All Time',
                        days: -1
                    }],
                    selectedFilter: {
                        name: 'All Time',
                        days: -1
                    }
                }

                var plotOptions = {
                    series: {
                        bars: {
                            show: true,
                            lineWidth: 2,
                            align: 'center',
                            barWidth: 0.9
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        color: 'rgba(0,0,0,0.1)'
                    },
                    xaxis: {
                        mode: 'categories',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y Projects',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };

                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top Searched Projects';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';


                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no users found in this range';
                }

                var transformToPlotData = function(ret) {
                    var data = [];

                    for (var i = 0; i < ret.roles.length; i++) {
                        var view = ret.roles[i];

                        data.push([view.category, parseInt(view.searches, 10)]);
                    };
                    // console.log('data', JSON.stringify(data));

                    return [{
                        "data": data,
                        "color": "#0088cc"
                    }];

                }


                var _plotPieChart = function(ret) {


                    var total = 0;
                    var dat = [];
                    for (var i = 0; i < ret.roles.length; i++) {
                        var view = ret.roles[i];
                        total += view.searches;
                    };


                    var colors = ['#0088cc', '#2baab1', '#734ba9', '#E36159'];
                    for (var i = 0; i < ret.roles.length; i++) {
                        var view = ret.roles[i];
                        dat.push({
                            label: view.category,
                            data: [
                                [1, Math.floor(view.searches / total * 100)]
                            ],
                            color: colors[i % colors.length]
                        })
                    };
                    console.log('PIE CHART', ret, dat);

                    var plot = $.plot('#plotSearchedProjectsPieChart', dat, {
                        series: {
                            pie: {
                                show: true,
                                combine: {
                                    color: '#999',
                                    threshold: 0.1
                                }
                            }
                        },
                        legend: {
                            show: false
                        },
                        grid: {
                            hoverable: true,
                            clickable: true
                        }
                    });
                }

                var plotGraph = function(ret) {
                    scope.searchedProjects = ret;
                    var plotDat = transformToPlotData(ret);
                    $timeout(function() {
                        if (plotDat[0].data.length > 0) {
                            var plotSP = $.plot('#plotSearchedProjects', plotDat, plotOptions);
                        } else {
                            var plotSP = $.plot('#plotSearchedProjects', [
                                []
                            ], plotOptions);
                        }

                    });

                    _plotPieChart(ret);
                }

                //6. <By country>number of visitors based on Role (Manager, Engineer, Analyst)
                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.seachedProjectsPerCategory({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.seachedProjectsPerCategory({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {

                            plotGraph(ret);
                        });

                    }
                });








            }
        };
    });
};
},{}],17:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('usersCountryVisit', function(analyticsService) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/users-country-visit.html',
            link: function(scope, element, attributes) {

                scope.currentDays = '-1';


                scope.options = {
                    filters: [{
                        name: 'Today',
                        days: 1
                    }, {
                        name: 'Last Week',
                        days: 7
                    }, {
                        name: 'Last Month',
                        days: 30
                    }, {
                        name: 'Last Year',
                        days: 365
                    }, {
                        name: 'All Time',
                        days: -1
                    }],
                    selectedFilter: {
                        name: 'All Time',
                        days: -1
                    }
                }

                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top 10 Users';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';

                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no users found in this range';
                }

                var plotOptions = {
                    series: {
                        bars: {
                            show: true,
                            lineWidth: 2,
                            align: 'center',
                            barWidth: 0.9
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        color: 'rgba(0,0,0,0.1)'

                    },
                    xaxis: {
                        mode: 'categories',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y Visits',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };
                var transformToPlotData = function(ret) {
                    var data = [];

                    for (var i = 0; i < ret.users.length; i++) {
                        var view = ret.users[i];

                        data.push([view.user.name, parseInt(view.visits, 10)]);
                    };
                    // console.log('keyqord data', JSON.stringify(data));

                    return [{
                        "data": data,
                        "color": "#0088cc"
                    }];

                };


                var plotGraph = function(ret) {
                    scope.usersByCountryVisits = ret;
                    var plotDat = transformToPlotData(ret);
                    if (plotDat[0].data.length > 0) {
                        var plotSP = $.plot('#plotUsersVisit', plotDat, plotOptions);
                    } else {
                        var plotSP = $.plot('#plotUsersVisit', [
                            []
                        ], plotOptions);
                    }
                }

                //2. <By country> top 10 users  - based on number of visits

                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.tenUsersByCountryVisit({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {

                        analyticsService.tenUsersByCountryVisit({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {
                            plotGraph(ret);
                        });

                    }
                });

                scope.goToUserDetail = function(id) {
                    window.location = '/#/users/' + id;
                }

            }
        };
    });
};
},{}],18:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.directive('visitorsRole', function(analyticsService) {
        return {
            restrict: 'EA',

            transclude: false,
            scope: {},
            templateUrl: 'admin/directives/visitors-role-by-country.html',
            link: function(scope, element, attributes) {

                scope.currentDays = '-1';


                scope.options = {
                    filters: [{
                        name: 'Today',
                        days: 1
                    }, {
                        name: 'Last Week',
                        days: 7
                    }, {
                        name: 'Last Month',
                        days: 30
                    }, {
                        name: 'Last Year',
                        days: 365
                    }, {
                        name: 'All Time',
                        days: -1
                    }],
                    selectedFilter: {
                        name: 'All Time',
                        days: -1
                    }
                }
                var plotOptions = {
                    series: {
                        bars: {
                            show: true,
                            lineWidth: 2,
                            align: 'center',
                            barWidth: 0.9
                        },
                        shadowSize: 0
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,
                        borderColor: 'rgba(0,0,0,0.1)',
                        borderWidth: 1,
                        labelMargin: 15,
                        backgroundColor: 'transparent'
                    },
                    yaxis: {
                        color: 'rgba(0,0,0,0.1)'

                    },
                    xaxis: {
                        mode: 'categories',
                        color: 'rgba(0,0,0,0)'
                    },
                    legend: {
                        show: false
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: '%x: %y Visits',
                        shifts: {
                            x: -30,
                            y: 25
                        },
                        defaultTheme: false
                    }
                };
                var transformToPlotData = function(ret) {
                    var data = [];

                    for (var i = 0; i < ret.roles.length; i++) {
                        var view = ret.roles[i];

                        data.push([view.role, parseInt(view.count, 10)]);
                    };
                    // console.log('data', JSON.stringify(data));

                    return [{
                        "data": data,
                        "color": "#0088cc"
                    }];

                }
                if (attributes.title) {
                    scope.title = attributes.title;
                } else {
                    scope.title = 'Top 10 Visitors';
                }

                scope.subtitle = (attributes.subtitle) ? attributes.subtitle : '';

                if (attributes.errorinfo) {
                    scope.errorinfo = attributes.errorinfo;
                } else {
                    scope.errorinfo = 'There is no users found in this range';
                }

                var plotGraph = function(ret) {
                    scope.visitorsRoleByCountry = ret;
                    var plotDat = transformToPlotData(ret);
                    if (plotDat[0].data.length > 0) {
                        var plotSP = $.plot('#plotVisitorsRole', plotDat, plotOptions);
                    } else {
                        var plotSP = $.plot('#plotVisitorsRole', [
                            []
                        ], plotOptions);
                    }
                }

                //6. <By country>number of visitors based on Role (Manager, Engineer, Analyst)
                scope.filter = function(days) {
                    scope.currentDays = days;
                    analyticsService.visitorsRoleByCountry({
                        country: attributes.country,
                        days: days,
                    }, function(ret) {
                        plotGraph(ret);
                    });
                };

                attributes.$observe('country', function(value) {
                    if (value) {
                        analyticsService.visitorsRoleByCountry({
                            country: value,
                            days: scope.options.selectedFilter.days,
                        }, function(ret) {
                            plotGraph(ret);
                        });

                    }
                });

            }
        };
    });
};
},{}],19:[function(require,module,exports){
'use strict';
var m = angular.module('ht.filters', []);


// controllers
require('./lib/title-case')(m);
require('./lib/discount')(m);
require('./lib/value')(m);


module.exports = m;
},{"./lib/discount":20,"./lib/title-case":21,"./lib/value":22}],20:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.filter('discount', function() {
        return function(stores, minD, maxD) {
            // console.log("FILTER STORE", minD, maxD);
            var filteredStores = [];

            for (var i = 0; i < stores.length; i = i + 1) {
                var store = stores[i];

                if (minD <= store.discount && store.discount <= maxD) {
                    filteredStores.push(store);
                }
            }

            return filteredStores;
        };
    });
};
},{}],21:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.filter('titlecase', function() {
        return function(input) {
            var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;

            input = input.toLowerCase();
            return input.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function(match, index, title) {
                if (index > 0 && index + match.length !== title.length &&
                    match.search(smallWords) > -1 && title.charAt(index - 2) !== ':' &&
                    (title.charAt(index + match.length) !== ' - ' || title.charAt(index - 1) === ' - ') &&
                    title.charAt(index - 1).search(/[^\s-]/) < 0) {
                    return match.toLowerCase();
                }

                if (match.substr(1).search(/[A-Z]|\../) > -1) {
                    return match;
                }

                return match.charAt(0).toUpperCase() + match.substr(1);
            });
        };
    }).filter('storename', function() {
        return function(input) {
            if (input !== undefined) {
                return input.split('-').join(' ');
            } else {
                return '';
            }

        };
    }).filter('fullname', function() {
        return function(user) {

            if ((user.first_name !== undefined) && (user.last_name !== undefined)) {
                return user.first_name + ' ' + user.last_name;
            } else {
                return user.email;
            }

        };
    }).filter('dashboardProfile', function() {
        return function(user) {

            return '/dashboard/#/user-profile/' + user.id;

        };
    }).filter('dashboardDealerProfile', function() {
        return function(user) {

            return '/dashboard/#/dealer-profile/' + user.id;

        };
    });
};
},{}],22:[function(require,module,exports){
'use strict';
module.exports = function(m) {
    m.filter('cardvalue', function() {
        return function(cards, minD, maxD) {
            // console.log("FILTER STORE", minD, maxD);
            var filteredCards = [];

            for (var i = 0; i < cards.length; i = i + 1) {
                var store = cards[i];

                if (minD <= store.value && store.value <= maxD) {
                    filteredCards.push(store);
                }
            }

            return filteredCards;
        };
    });
};
},{}],23:[function(require,module,exports){
'use strict';
var m = angular.module('ht.services', []);


// factories

require('./lib/user')(m);
require('./lib/auth')(m);
require('./lib/analytics')(m);

module.exports = m;
},{"./lib/analytics":24,"./lib/auth":25,"./lib/user":26}],24:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.factory('analyticsService', ['$resource',
        function($resource) {

            return $resource('/api/analytics/:id', null, {

                'tenKeywordsByUser': {
                    method: 'GET',
                    'url': '/api/analytics/ten-keywords-by-user/:id/:days',
                },
                'tenUsersByCountryVisit': {
                    method: 'GET',
                    'url': '/api/analytics/ten-users-by-country-visit/:country/:days',
                },
                'tenKeywordsByCountry': {
                    method: 'GET',
                    'url': '/api/analytics/ten-keywords-by-country/:country/:days',
                },
                'visitorsRoleByCountry': {
                    method: 'GET',
                    'url': '/api/analytics/visitors-role-by-country/:country/:days',
                },
                'seachedProjectsPerCategory': {
                    method: 'GET',
                    'url': '/api/analytics/searched-projects-per-category/:country/:days',
                },
                'pageViews': {
                    method: 'GET',
                    'url': '/api/analytics/page-views/:country/:days',
                },
                'completedProjects': {
                    method: 'GET',
                    'url': '/api/analytics/completed-projects/:country/:days',
                },
                'contentPieces': {
                    method: 'GET',
                    'url': '/api/analytics/content-pieces/:country/per_week',
                }

            });
        }
    ]);
};
},{}],25:[function(require,module,exports){
'use strict';


module.exports = function(m) {

    m.factory('authService', ['store', '$location', 'userService', '$modal', '$http',
        function(store, $location, userService, $modal, $http) {



            var login = function(callback) {

            };


            // 
            var logout = function(callback) {

            };

            var auth = function() {

            };

            var adminAuthenticate = function() {

                console.log('CURRENT LOGGINED USER', store.get('user'));
                if (store.get('admin')) {
                    return true;
                } else {
                    window.location = '/admin-login/#/';
                    return false;
                }
            };

            var isAuthenticated = function() {

                console.log('CURRENT LOGGINED USER', store.get('user'));
                if (store.get('user')) {
                    return true;
                } else {
                    return false;
                }
            };



            return {
                'login': login,
                'logout': logout,
                'auth': auth,
                'adminAuthenticate': adminAuthenticate,
                isAuthenticated: isAuthenticated

            };
        }
    ]).factory('utilService', [

        function() {

            var COUNTRY_MAP = {
                "AE": "United Arab Emirates",
                "AF": "Afghanistan",
                "AG": "Antigua and Barbuda",
                "AL": "Albania",
                "AM": "Armenia",
                "AO": "Angola",
                "AR": "Argentina",
                "AT": "Austria",
                "AU": "Australia",
                "AZ": "Azerbaijan",
                "BA": "Bosnia and Herzegovina",
                "BB": "Barbados",
                "BD": "Bangladesh",
                "BE": "Belgium",
                "BF": "Burkina Faso",
                "BG": "Bulgaria",
                "BI": "Burundi",
                "BJ": "Benin",
                "BN": "Brunei Darussalam",
                "BO": "Bolivia",
                "BR": "Brazil",
                "BS": "Bahamas",
                "BT": "Bhutan",
                "BW": "Botswana",
                "BY": "Belarus",
                "BZ": "Belize",
                "CA": "Canada",
                "CD": "Congo",
                "CF": "Central African Republic",
                "CG": "Congo",
                "CH": "Switzerland",
                "CI": "Cote d'Ivoire",
                "CL": "Chile",
                "CM": "Cameroon",
                "CN": "China",
                "CO": "Colombia",
                "CR": "Costa Rica",
                "CU": "Cuba",
                "CV": "Cape Verde",
                "CY": "Cyprus",
                "CZ": "Czech Republic",
                "DE": "Germany",
                "DJ": "Djibouti",
                "DK": "Denmark",
                "DM": "Dominica",
                "DO": "Dominican Republic",
                "DZ": "Algeria",
                "EC": "Ecuador",
                "EE": "Estonia",
                "EG": "Egypt",
                "ER": "Eritrea",
                "ES": "Spain",
                "ET": "Ethiopia",
                "FI": "Finland",
                "FJ": "Fiji",
                "FK": "Falkland Islands",
                "FR": "France",
                "GA": "Gabon",
                "GB": "United Kingdom",
                "GD": "Grenada",
                "GE": "Georgia",
                "GF": "French Guiana",
                "GH": "Ghana",
                "GL": "Greenland",
                "GM": "Gambia",
                "GN": "Guinea",
                "GQ": "Equatorial Guinea",
                "GR": "Greece",
                "GT": "Guatemala",
                "GW": "Guinea-Bissau",
                "GY": "Guyana",
                "HN": "Honduras",
                "HR": "Croatia",
                "HT": "Haiti",
                "HU": "Hungary",
                "ID": "Indonesia",
                "IE": "Ireland",
                "IL": "Israel",
                "IN": "India",
                "IQ": "Iraq",
                "IR": "Iran",
                "IS": "Iceland",
                "IT": "Italy",
                "JM": "Jamaica",
                "JO": "Jordan",
                "JP": "Japan",
                "KE": "Kenya",
                "KG": "Kyrgyz Republic",
                "KH": "Cambodia",
                "KM": "Comoros",
                "KN": "Saint Kitts and Nevis",
                "KP": "North Korea",
                "KR": "South Korea",
                "KW": "Kuwait",
                "KZ": "Kazakhstan",
                "LA": "Lao People's Democratic Republic",
                "LB": "Lebanon",
                "LC": "Saint Lucia",
                "LK": "Sri Lanka",
                "LR": "Liberia",
                "LS": "Lesotho",
                "LT": "Lithuania",
                "LV": "Latvia",
                "LY": "Libya",
                "MA": "Morocco",
                "MD": "Moldova",
                "MG": "Madagascar",
                "MK": "Macedonia",
                "ML": "Mali",
                "MM": "Myanmar",
                "MN": "Mongolia",
                "MR": "Mauritania",
                "MT": "Malta",
                "MU": "Mauritius",
                "MV": "Maldives",
                "MW": "Malawi",
                "MX": "Mexico",
                "MY": "Malaysia",
                "MZ": "Mozambique",
                "NA": "Namibia",
                "NC": "New Caledonia",
                "NE": "Niger",
                "NG": "Nigeria",
                "NI": "Nicaragua",
                "NL": "Netherlands",
                "NO": "Norway",
                "NP": "Nepal",
                "NZ": "New Zealand",
                "OM": "Oman",
                "PA": "Panama",
                "PE": "Peru",
                "PF": "French Polynesia",
                "PG": "Papua New Guinea",
                "PH": "Philippines",
                "PK": "Pakistan",
                "PL": "Poland",
                "PT": "Portugal",
                "PY": "Paraguay",
                "QA": "Qatar",
                "RE": "Reunion",
                "RO": "Romania",
                "RS": "Serbia",
                "RU": "Russian Federationß",
                "RW": "Rwanda",
                "SA": "Saudi Arabia",
                "SB": "Solomon Islands",
                "SC": "Seychelles",
                "SD": "Sudan",
                "SE": "Sweden",
                "SI": "Slovenia",
                "SK": "Slovakia",
                "SL": "Sierra Leone",
                "SN": "Senegal",
                "SO": "Somalia",
                "SR": "Suriname",
                "ST": "Sao Tome and Principe",
                "SV": "El Salvador",
                "SY": "Syrian Arab Republic",
                "SZ": "Swaziland",
                "TD": "Chad",
                "TG": "Togo",
                "TH": "Thailand",
                "TJ": "Tajikistan",
                "TL": "Timor-Leste",
                "TM": "Turkmenistan",
                "TN": "Tunisia",
                "TR": "Turkey",
                "TT": "Trinidad and Tobago",
                "TW": "Taiwan",
                "TZ": "Tanzania",
                "UA": "Ukraine",
                "UG": "Uganda",
                "US": "United States",
                "UY": "Uruguay",
                "UZ": "Uzbekistan",
                "VE": "Venezuela",
                "VN": "Vietnam",
                "VU": "Vanuatu",
                "YE": "Yemen",
                "ZA": "South Africa",
                "ZM": "Zambia",
                "ZW": "Zimbabwe"
            }





            return {
                'COUNTRY_MAP': COUNTRY_MAP
            };
        }
    ]);
};
},{}],26:[function(require,module,exports){
'use strict';


module.exports = function(m) {
    m.factory('userService', ['$resource',
        function($resource) {

            return $resource('/api/users/:id', null, {

                'adminLogin': {
                    method: 'POST',
                    'url': '/api/users/admin-login',
                },
                'getAllCountries': {
                    method: 'GET',
                    'url': '/api/users/countries',
                    isArray: true
                }

            });
        }
    ]);
};
},{}]},{},[1]);
